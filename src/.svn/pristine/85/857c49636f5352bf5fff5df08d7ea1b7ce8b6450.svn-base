import { Component, OnInit } from '@angular/core';
import { AppService } from 'src/app/app.service';
import { ToastrService } from 'ngx-toastr';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-allow-inside',
  templateUrl: './allow-inside.component.html',
  styleUrls: ['./allow-inside.component.scss']
})
export class AllowInsideComponent implements OnInit {

  add: any = {};
  public btndisable: boolean = false;

rs=[];

  constructor(public appservice: AppService, private toastr: ToastrService, private http: HttpClient) {

    this.rs = this.appservice.get_fields_of('Visiting_Member');

    if(this.appservice.isEdit)
    {
      
      this.add=appservice.Edit_Row;
      this.add.V_From_Time = appservice.datetimefromat(this.appservice.Edit_Row.V_From_Time);
      this.add.V_To_Time = appservice.datetimefromat(this.appservice.Edit_Row.V_To_Time);
    }
    else
    {
      this.clear();
      this.add.ID="0";

    }
    
    this.add.Approval_Status="Approved";
    this.add.Visitior_Status="Allow inside"
  }



  

get_Ph_No(ID,name)
{

  try{
  this.appservice.Selected_Customer = this.appservice.Employee_Details_Rows.filter(e => e.ID == ID)[0];

  this.add.V_Person_ID = this.appservice.Selected_Customer.ID;
  this.add.V_Person_Contact = this.appservice.Selected_Customer.Contact_No;
  this.add.V_Department = this.appservice.Selected_Customer.Department;
  
  }catch{}
}




  clear() {

    this.appservice.get_fields_of('Visitor_Details').forEach((activity) => {
      if (activity.Default_Value == "T_Date") {
        this.add[activity.Field] = this.appservice.T_Date;
      }
      else if (activity.Default_Value == "T_Datetime") {
      
        this.add[activity.Field] = this.appservice.T_Date_Time;
      }
      else {
        this.add[activity.Field] = activity.Default_Value;
      }

      
    });
  }
  Valid;

   convertUTCDateToLocalDate(date) {
    var newDate = new Date(date.getTime()+date.getTimezoneOffset()*60*1000);

    var offset = date.getTimezoneOffset() / 60;
    var hours = date.getHours();

    newDate.setHours(hours - offset);

    return newDate;   
}

  addData(f) {



 

    this.Valid = true;
    this.appservice.get_fields_of('Visitor_Details').filter(e => String(e.Validate).toLocaleLowerCase() == "true").forEach((data) => {

      if (this.add[data.Field] == "") {
        this.Valid = false;
        return;
      }

    });


    
    this.add.Company = this.appservice.Company;
    this.add.Company_ID = this.appservice.Company;
    this.add.Created_by = this.appservice.CREATED_BY;
    this.add.items = this.appservice.Details_Row;
  

    this.add.Table_Name = "Visitor_Details";
    if (this.Valid) {
      this.btndisable = true;

     
      this.http.post(this.appservice.Server_URL + 'api/Master/Post_Visitor', this.add, { headers: this.appservice.headers })
        .subscribe(
          (val: string) => {
            this.btndisable = false;

            if (val == "True") {
              this.toastr.success("Details Salved Success", 'Msg');
              this.appservice.isEdit = false;
              this.appservice.get_Visitor_Master();
              
              this.appservice.back();
            }
            else {
              this.toastr.error(val, "Error", { timeOut: 3000 });
            }
          },
          response => {
            this.toastr.error('Error ', response, {
              timeOut: 3000
            });

          });

    }
  }
  ngOnInit(): void {
  }

}

