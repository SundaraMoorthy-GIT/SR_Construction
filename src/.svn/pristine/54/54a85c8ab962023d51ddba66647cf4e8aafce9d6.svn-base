import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { ConfirmationService } from 'primeng/api';
import { AppService } from 'src/app/app.service';

@Component({
  selector: 'app-ledger-details1',
  templateUrl: './ledger-details1.component.html',
  styleUrls: ['./ledger-details1.component.scss']
})
export class LedgerDetails1Component implements OnInit {

  cols = [];
  Rows = [];
  constructor(public confirmationService: ConfirmationService, public appservice: AppService, private router: Router, private route: ActivatedRoute) {

    this.appservice.Ledger_Master_GF = [...new Set(this.appservice.get_fields_of('Ledger_Master').map(item => item.Field))];
    this.cols = appservice.get_grid_fields_of('Ledger_Master');


  }


  search(searchString) {

    if (searchString == "") {
      this.appservice.Ledger_Master_Rows = this.appservice.PLedger_Master_Rows;
    }
    else {
      this.appservice.Ledger_Master_Rows = this.appservice.PLedger_Master_Rows.filter(
        it=>{   
          const builderId = it.Ledger_Name.toString().toLowerCase().includes(String(searchString).toLowerCase()) 
          const groupName = it.Phone_Number.toString().toLowerCase().includes(String(searchString).toLowerCase())
          const companyPersonName = it.Vc_Number.toString().toLowerCase().includes(String(searchString).toLowerCase())
          
          return (builderId + groupName + companyPersonName );      
      }); 
      
    }
  }

  addReset() {
    this.appservice.isadd = "0";
    this.appservice.Edit_Row = {};
    this.appservice.isEdit = false;
    return this.router.navigate(['master/ledger-entry']);
  }

  addReset1() {


    return this.router.navigate(['/transaction/customer-overview']);
  }

  onEdit(item) {
    this.appservice.isEdit = true;
    this.appservice.Edit_Row = item;
    return this.router.navigate(['master/ledger-entry']);
  }
  onDelete(item) {
    this.confirmationService.confirm({
      message: 'Are you sure that you want to delete press Yes?',
      accept: () => {
        this.Delete(item)
      }
    });
  }
  Delete(item) {
    this.appservice.get("Api/master/delete_Ledger_Master1?ID=" + item).subscribe((res: any) => {
      var index = this.appservice.Ledger_Master_Rows.findIndex(function (items, i) {
        return items.ID === item
      });
      if (index > -1) {
        this.appservice.Ledger_Master_Rows.splice(index, 1);
      }
      this.appservice.Ledger_Master_Rows = this.appservice.Ledger_Master_Rows;
      this.appservice.get_Ledger_Master();
    });
  }
  export_excel(data) {
    this.appservice.Ledger_Master_Export = this.appservice.get_fields_of('Ledger_Master');
    this.appservice.Excel_Data.Header = this.appservice.Ledger_Master_Export;
    this.appservice.Excel_Data.items = this.appservice.Ledger_Master_Rows
    this.appservice.export_excel();

  }


  export_pdf(data) {

    this.appservice.Ledger_Master_Export = this.appservice.get_grid_fields_of('Ledger_Master');
    this.appservice.Excel_Data.Total_Row = "Total Rows : " + this.appservice.length_of(data);
    this.appservice.Excel_Data.Header = this.appservice.Ledger_Master_Export;
    this.appservice.Excel_Data.items = this.appservice.Ledger_Master_Rows
    this.appservice.export_pdf();
  }

  ngOnInit(): void {
  }

}
